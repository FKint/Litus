<?php

namespace LogisticsBundle\Repository\Reservation;

use DateTime,
    Doctrine\ORM\EntityRepository;

/**
 * PianoReservation
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PianoReservation extends EntityRepository
{
    public function findAllActive()
    {
        $query = $this->_em->createQueryBuilder();
        $resultSet = $query->select('r')
            ->from('LogisticsBundle\Entity\Reservation\PianoReservation', 'r')
            ->where(
                $query->expr()->gte('r.endDate', ':start')
            )
            ->setParameter('start', new DateTime())
            ->orderBy('r.startDate', 'ASC')
            ->getQuery()
            ->getResult();

        return $resultSet;
    }

    public function findAllOld()
    {
        $query = $this->_em->createQueryBuilder();
        $resultSet = $query->select('r')
            ->from('LogisticsBundle\Entity\Reservation\PianoReservation', 'r')
            ->where(
                $query->expr()->lt('r.endDate', ':end')
            )
            ->setParameter('end', new DateTime())
            ->orderBy('r.startDate', 'DESC')
            ->getQuery()
            ->getResult();

        return $resultSet;
    }

    public function findAllByDates(DateTime $start, DateTime $end)
    {
        $query = $this->_em->createQueryBuilder();
        $resultSet = $query->select('r')
            ->from('LogisticsBundle\Entity\Reservation\PianoReservation', 'r')
            ->where(
                $query->expr()->orx(
                    $query->expr()->andx(
                        $query->expr()->gte('r.startDate', ':start'),
                        $query->expr()->lte('r.startDate', ':end')
                    ),
                    $query->expr()->andx(
                        $query->expr()->gte('r.endDate', ':start'),
                        $query->expr()->lte('r.endDate', ':end')
                    )
                )
            )
            ->setParameter('start', $start)
            ->setParameter('end', $end)
            ->getQuery()
            ->getResult();

        return $resultSet;
    }

    public function isTimeInExistingReservation(DateTime $date, $isStart)
    {
        $query = $this->_em->createQueryBuilder();

        if ($isStart) {
            $where = $query->expr()->andX(
                $query->expr()->lte('r.startDate', ':date'),
                $query->expr()->gt('r.endDate', ':date')
            );
        } else {
            $where = $query->expr()->andX(
                $query->expr()->lt('r.startDate', ':date'),
                $query->expr()->gte('r.endDate', ':date')
            );
        }

        $resultSet = $query->select('r')
            ->from('LogisticsBundle\Entity\Reservation\PianoReservation', 'r')
            ->where(
                $where
            )
            ->setParameter('date', $date)
            ->setMaxResults(1)
            ->getQuery()
            ->getResult();

        return isset($resultSet[0]);
    }
}
